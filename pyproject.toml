[tool.poetry]
name = "RAG ChatBot"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
packages = [{ include = "src/main.py" }]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
streamlit = "^1.38.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
isort = "^5.13.2"
black = "^24.8.0"
pyproject-flake8 = "^7.0.0"
pytest = "^8.3.3"
autoflake = "^2.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true     # エラー時のメッセージを詳細表示
show_column_numbers = true    # エラー発生箇所の行数/列数を表示
ignore_missing_imports = true # import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
disallow_untyped_defs = true  # 関数定義の引数/戻り値に型アノテーション必須
no_implicit_optional = true   # デフォルト引数に None を取る場合型アノテーションに Optional 必須
warn_return_any = true        # 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_unused_ignores = true    # mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
warn_redundant_casts = true   # 冗長なキャストに警告

[tool.black]
line-length = 64
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 64
# E203: ":"の前の空白を入れないルール
# W503: 演算子の前に改行しないようにするルール
extend-ignore = ["E203", "W503"]
exclude = [".venv", ".git", "__pycache__"]
max-complexity = 10

[tool.isort]
profile = "black"
line_length = 64
multi_line_output = 3         # from XXX import lib1, lib2...のような記述時の改行方法の設定(https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html)
include_trailing_comma = true # 最後の要素の末尾に","を付けるようにする設定

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.poetry]
name = "RAG ChatBot"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
packages = [{ include = "src/main.py" }]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
streamlit = "^1.39.0"
openai = "^1.51.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
pytest = "^8.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true     # エラー時のメッセージを詳細表示
show_column_numbers = true    # エラー発生箇所の行数/列数を表示
ignore_missing_imports = true # import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
disallow_untyped_defs = true  # 関数定義の引数/戻り値に型アノテーション必須
no_implicit_optional = true   # デフォルト引数に None を取る場合型アノテーションに Optional 必須
warn_return_any = true        # 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_unused_ignores = true    # mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
warn_redundant_casts = true   # 冗長なキャストに警告

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.ruff]
select = [
  "ALL",
  # "F",  # pyflakes
  # "E",  # error (pycodestyle errors)
  # "W",  # warning (pycodestyle warnings)
  # "I",  # isort
  # "DJ", # flake8-django
  # "B",  # Black
  # "N",  # pep8-naming  etc...
]
ignore = ["D", "PLR0913"]
fixable = ["ALL"]
exclude = [".ruff_cache"]
line-length = 64
indent-width = 4
target-version = "py312"
